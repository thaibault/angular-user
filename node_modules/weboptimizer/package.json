{
  "_args": [
    [
      {
        "raw": "weboptimizer@latest",
        "scope": null,
        "escapedName": "weboptimizer",
        "name": "weboptimizer",
        "rawSpec": "latest",
        "spec": "latest",
        "type": "tag"
      },
      "/home/torben/cloud/data/repository/public/angularUser/node_modules"
    ]
  ],
  "_from": "weboptimizer@latest",
  "_id": "weboptimizer@1.0.70",
  "_inCache": true,
  "_installable": true,
  "_location": "/weboptimizer",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/weboptimizer-1.0.70.tgz_1473849090325_0.9055581938009709"
  },
  "_npmUser": {
    "name": "thaibault",
    "email": "info@torben.website"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {
    "abab": "1.0.3",
    "acorn": "2.7.0",
    "acorn-globals": "1.0.9",
    "ansi-styles": "2.2.1",
    "array-equal": "1.0.0",
    "array-union": "1.0.2",
    "autoprefixer": "6.4.1",
    "balanced-match": "0.4.2",
    "catharsis": "0.8.8",
    "colorguard": "1.2.0",
    "concat-stream": "1.5.0",
    "core-js": "2.4.1",
    "cosmiconfig": "1.1.0",
    "cssom": "0.3.1",
    "cssstyle": "0.2.37",
    "debug": "2.2.0",
    "doctrine": "1.3.0",
    "doiuse": "2.4.1",
    "escape-string-regexp": "1.0.5",
    "escodegen": "1.8.1",
    "escope": "3.6.0",
    "espree": "3.1.7",
    "estraverse": "4.2.0",
    "esutils": "2.0.2",
    "execall": "1.0.0",
    "file-entry-cache": "2.0.0",
    "fs-extra": "0.30.0",
    "get-stdin": "5.0.1",
    "glob": "7.0.6",
    "globjoin": "0.1.4",
    "has-ansi": "2.0.0",
    "html-tags": "1.1.1",
    "iconv-lite": "0.4.13",
    "ignore": "3.1.5",
    "imurmurhash": "0.1.4",
    "inquirer": "0.12.0",
    "is-my-json-valid": "2.13.1",
    "is-resolvable": "1.0.0",
    "js-yaml": "3.6.1",
    "js2xmlparser": "1.0.0",
    "json-stable-stringify": "1.0.1",
    "known-css-properties": "0.0.4",
    "levn": "0.3.0",
    "lodash": "4.15.0",
    "log-symbols": "1.0.2",
    "marked": "0.3.6",
    "meow": "3.7.0",
    "mkdirp": "0.5.0",
    "multimatch": "2.1.0",
    "natural-compare": "1.4.0",
    "normalize-selector": "0.2.0",
    "nwmatcher": "1.3.8",
    "object-assign": "4.1.0",
    "optionator": "0.8.1",
    "parse5": "1.5.1",
    "path-is-inside": "1.0.1",
    "pify": "2.3.0",
    "pinkie-promise": "2.0.1",
    "pluralize": "1.2.1",
    "postcss": "5.1.2",
    "postcss-less": "0.14.0",
    "postcss-media-query-parser": "0.2.1",
    "postcss-reporter": "1.4.1",
    "postcss-resolve-nested-selector": "0.1.1",
    "postcss-scss": "0.2.1",
    "postcss-selector-parser": "2.2.1",
    "postcss-value-parser": "3.3.0",
    "progress": "1.1.8",
    "regenerator-runtime": "0.9.5",
    "request": "2.74.0",
    "require-uncached": "1.0.2",
    "requizzle": "0.2.1",
    "sax": "1.2.1",
    "shelljs": "0.6.1",
    "specificity": "0.2.1",
    "string-width": "1.0.2",
    "strip-ansi": "3.0.1",
    "strip-bom": "3.0.0",
    "strip-json-comments": "1.0.4",
    "style-search": "0.1.0",
    "stylehacks": "2.3.1",
    "sugarss": "0.1.5",
    "supports-color": "2.0.0",
    "svg-tags": "1.0.0",
    "symbol-tree": "3.1.4",
    "table": "3.7.8",
    "taffydb": "2.6.2",
    "text-table": "0.2.0",
    "tough-cookie": "2.3.1",
    "user-home": "2.0.0",
    "webidl-conversions": "3.0.1",
    "whatwg-url": "3.0.0",
    "xml-name-validator": "2.0.1"
  },
  "_requested": {
    "raw": "weboptimizer@latest",
    "scope": null,
    "escapedName": "weboptimizer",
    "name": "weboptimizer",
    "rawSpec": "latest",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/weboptimizer/-/weboptimizer-1.0.70.tgz",
  "_shasum": "1a2a9a6e9473cdcb7c4d3cde08c83ef4faa2db96",
  "_shrinkwrap": null,
  "_spec": "weboptimizer@latest",
  "_where": "/home/torben/cloud/data/repository/public/angularUser/node_modules",
  "bin": {
    "webOptimizer": "taskRunner.compiled.js"
  },
  "bugs": {
    "url": "https://github.com/thaibault/webOptimizer/issues"
  },
  "configuration": {
    "default": {
      "debug": false,
      "library": true,
      "exportFormat": {
        "self": "umd",
        "external": "umd"
      },
      "favicon": {
        "logo": {
          "__evaluate__": "self.path.source.asset.favicon"
        },
        "prefix": {
          "__evaluate__": "`${path.relative(self.path.target.base, path.resolve(self.path.target.asset.image, 'favicons-[hash]'))}/`"
        },
        "emitStats": false,
        "statsFilename": "iconStats.json",
        "persistentCache": true,
        "inject": true,
        "background": "white",
        "title": {
          "__evaluate__": "self.name"
        },
        "icons": {
          "android": true,
          "appleIcon": true,
          "appleStartup": true,
          "coast": true,
          "favicons": true,
          "firefox": true,
          "opengraph": true,
          "twitter": true,
          "yandex": true,
          "windows": true
        }
      },
      "files": {
        "compose": {
          "cascadingStyleSheet": {
            "__evaluate__": "self.debug ? null : `${path.resolve(self.path.target.asset.cascadingStyleSheet, 'index.css')}?${self.hashAlgorithm}=[contenthash]`"
          },
          "image": {
            "__evaluate__": "self.debug ? null : path.resolve(self.path.target.asset.image, 'sprite.png')"
          },
          "javaScript": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.javaScript, 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'buildDLL' ? '[name]' : 'index')}.js?${self.hashAlgorithm}=[hash]`"
          }
        },
        "defaultHTML": {
          "chunksSortMode": "auto",
          "debug": false,
          "filename": "index.html",
          "hash": true,
          "inject": "body",
          "minify": {
            "__evaluate__": "self.module.optimizer.htmlMinifier"
          },
          "template": {
            "__evaluate__": "`html?${tools.convertCircularObjectToJSON(tools.extendObject({}, self.module.html, {minimize: false}))}!pug?${tools.convertCircularObjectToJSON(self.module.preprocessor.pug)}!${helper.isFileSync(path.resolve(self.path.source.base, 'index.pug')) ? path.resolve(self.path.source.base, 'index.pug') : path.resolve(webOptimizerPath, 'index.pug')}`"
          }
        },
        "html": [
          {}
        ],
        "additionalPaths": [
          "robots.txt",
          "404.html",
          "crossdomain.xml",
          "humans.txt",
          ".htaccess",
          "license.txt",
          "favicon.ico"
        ]
      },
      "injection": {
        "autoExclude": [
          "test/",
          "test.compiled/"
        ],
        "commonChunkIDs": [
          "vendor"
        ],
        "dllChunkIDs": [
          "vendor",
          "developmentHelper"
        ],
        "external": "__implicit__",
        "externalAliases": {},
        "ignorePattern": [],
        "implicitExternalExcludePattern": [
          {
            "__evaluate__": "/^weboptimizer\\/browserAPI(?:\\.compiled)?(?:\\.js)?$/"
          },
          {
            "__evaluate__": "/\\/webpack\\/buildin\\/module\\.js$/"
          }
        ],
        "implicitExternalIncludePattern": [],
        "internal": {
          "index": "__auto__"
        }
      },
      "inPlace": {
        "cascadingStyleSheet": true,
        "externalLibrary": {
          "normal": true,
          "dynamic": true
        },
        "javaScript": false,
        "otherMaximumFileSizeLimitInByte": 40960
      },
      "knownExtensions": [
        ".compiled",
        "",
        ".compiled.js",
        ".js",
        ".compiled.html",
        ".html",
        ".pug",
        ".compiled.css",
        ".css",
        ".compiled.eot",
        ".eot",
        ".compiled.woff",
        ".woff",
        ".compiled.woff2",
        ".woff2",
        ".compiled.ttf",
        ".ttf",
        ".compiled.svg",
        ".svg",
        ".compiled.png",
        ".png",
        ".compiled.jpg",
        ".jpg",
        ".compiled.ico",
        ".ico",
        ".compiled.gif",
        ".gif"
      ],
      "module": {
        "aliases": {
          "weboptimizer/browserAPI$": "weboptimizer/browserAPI.compiled"
        },
        "cascadingStyleSheet": "",
        "directories": [
          "web_modules",
          "node_modules"
        ],
        "html": {
          "config": "html",
          "attrs": [
            "img:src",
            "link:href"
          ]
        },
        "provide": {},
        "skipParseRegularExpression": [],
        "optimizer": {
          "data": {
            "limit": {
              "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
            },
            "name": {
              "__evaluate__": "`${path.join(path.relative(self.path.target.base, self.path.target.asset.data), '[name].[ext]')}?${self.hashAlgorithm}=[hash]`"
            }
          },
          "font": {
            "eot": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "name": {
                "__evaluate__": "`${path.join(path.relative(self.path.target.base, self.path.target.asset.font), '[name].[ext]')}?${self.hashAlgorithm}=[hash]`"
              }
            },
            "svg": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "mimetype": "image/svg+xml",
              "name": {
                "__evaluate__": "`${path.join(path.relative(self.path.target.base, self.path.target.asset.font), '[name].[ext]')}?${self.hashAlgorithm}=[hash]`"
              }
            },
            "ttf": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "mimetype": "application/octet-stream",
              "name": {
                "__evaluate__": "`${path.join(path.relative(self.path.target.base, self.path.target.asset.font), '[name].[ext]')}?${self.hashAlgorithm}=[hash]`"
              }
            },
            "woff": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "name": {
                "__evaluate__": "`${path.join(path.relative(self.path.target.base, self.path.target.asset.font), '[name].[ext]')}?${self.hashAlgorithm}=[hash]`"
              }
            }
          },
          "htmlMinifier": {
            "caseSensitive": true,
            "collapseBooleanAttributes": true,
            "collapseInlineTagWhitespace": true,
            "collapseWhitespace": true,
            "conservativeCollapse": true,
            "ignoreCustomComments": [],
            "ignoreCustomFragments": [
              {
                "__evaluate__": "/<%[\\s\\S]*?%>/"
              },
              {
                "__evaluate__": "/<\\?[\\s\\S]*?\\?>/"
              },
              {
                "__evaluate__": "/<link[^>]*>/"
              },
              {
                "__evaluate__": "/<img[^>]*>/"
              }
            ],
            "includeAutoGeneratedTags": false,
            "removeAttributeQuotes": false,
            "removeComments": true,
            "removeCommentsFromCDATA": true,
            "removeCDATASectionsFromCDATA": true,
            "removeTagWhitespace": false,
            "removeRedundantAttributes": false,
            "removeEmptyAttributes": false,
            "removeScriptTypeAttributes": true,
            "removeStyleLinkTypeAttributes": true,
            "removeOptionalTags": false,
            "removeEmptyElements": false,
            "useShortDoctype": false,
            "lint": false,
            "keepClosingSlash": true,
            "maxLineLength": 1e+31,
            "minifyJS": {
              "__evaluate__": "self.module.optimizer.uglifyJS"
            },
            "minifyCSS": false,
            "minifyURLs": false,
            "preserveLineBreaks": true,
            "preventAttributesEscaping": true,
            "processScripts": [],
            "processConditionalComments": false,
            "quoteCharacter": "\""
          },
          "image": {
            "content": {
              "disable": {
                "__evaluate__": "self.debug || true"
              },
              "optipng": {
                "optimizationLevel": 7
              },
              "gifsicle": {
                "optimizationLevel": 3,
                "interlanced": false,
                "colors": 256
              },
              "jpegtran": {
                "progressive": true,
                "arithmetic": true
              },
              "svgo": {},
              "pngquant": null,
              "plugins": []
            },
            "file": {
              "limit": {
                "__evaluate__": "self.inPlace.otherMaximumFileSizeLimitInByte"
              },
              "name": {
                "__evaluate__": "`/${path.relative(self.path.target.base, path.resolve(self.path.target.asset.image, '[name].[ext]'))}?${self.hashAlgorithm}=[hash]`"
              }
            }
          },
          "uglifyJS": {
            "compress": {
              "warnings": false
            }
          }
        },
        "preprocessor": {
          "cascadingStyleSheet": "?sourceMap=inline",
          "pug": {
            "moduleAliases": {
              "__evaluate__": "self.module.aliases"
            },
            "knownExtensions": {
              "__evaluate__": "self.knownExtensions"
            },
            "context": {
              "__evaluate__": "self.path.context"
            },
            "compiler": {
              "pretty": false,
              "debug": false,
              "cache": true
            }
          },
          "babel": {
            "cacheDirectory": true,
            "compact": {
              "__evaluate__": "!self.debug"
            },
            "minified": {
              "__evaluate__": "!self.debug"
            },
            "presets": [
              "latest",
              "stage-0",
              "babili"
            ],
            "plugins": [
              "transform-runtime",
              "transform-flow-strip-types"
            ]
          }
        },
        "style": {
          "insertAt": "top",
          "singleton": true
        }
      },
      "offline": {
        "caches": {
          "main": [
            "index.html",
            ":rest:"
          ]
        },
        "excludes": [
          {
            "__evaluate__": "`**/*.map?${self.hashAlgorithm}=*`"
          },
          "**/.*"
        ],
        "externals": [
          "index.html"
        ],
        "publicPath": "/",
        "relativePaths": false,
        "updateStrategy": "changed",
        "version": "[hash]",
        "AppCache": {
          "directory": "/"
        },
        "ServiceWorker": {
          "events": true,
          "navigateFallbackURL": null,
          "output": {
            "__evaluate__": "path.relative(self.path.target.base, path.resolve(self.path.target.asset.javaScript, 'serviceWorker.js'))"
          }
        }
      },
      "path": {
        "apiDocumentation": "apiDocumentation/",
        "base": "./",
        "ignore": [
          ".git",
          {
            "__evaluate__": "self.path.apiDocumentation"
          }
        ],
        "source": {
          "asset": {
            "base": "./",
            "cascadingStyleSheet": "cascadingStyleSheet/",
            "data": "data/",
            "favicon": {
              "__evaluate__": "path.resolve(self.path.source.asset.image, 'favicon.png')"
            },
            "font": "font/",
            "image": "image/",
            "javaScript": "javaScript/",
            "template": "template/"
          },
          "base": "source/"
        },
        "target": {
          "asset": {
            "base": "./",
            "cascadingStyleSheet": "cascadingStyleSheet/",
            "data": "data/",
            "favicon": {
              "__evaluate__": "path.resolve(self.path.target.asset.image, 'favicon.png')"
            },
            "font": "font/",
            "image": "image/",
            "javaScript": "javaScript/",
            "template": "template/"
          },
          "base": "build/",
          "manifest": "manifest.appcache",
          "public": ""
        },
        "tidyUp": [
          {
            "__evaluate__": "path.resolve(self.path.target.asset.javaScript, '.__dummy__.compiled.js')"
          },
          {
            "__evaluate__": "path.resolve(self.path.target.asset.javaScript, '.__dummy__.compiled.js.map')"
          },
          {
            "__evaluate__": "self.files.compose.image ? path.resolve(self.path.source.asset.image, path.relative(self.path.target.asset.image, self.files.compose.image)) : null"
          }
        ]
      },
      "targetTechnology": "web",
      "assetPattern": {
        "javaScript": {
          "excludeFilePathRegularExpression": {
            "__evaluate__": "`^(?:.*/)?(?:developmentHelper|vendor${self.debug ? '|index': ''})(?:\\.compiled)?\\.js$`"
          },
          "pattern": "'use strict';\n{1}"
        }
      },
      "build": {
        "default": {
          "outputExtension": "js",
          "preinstall": {
            "__evaluate__": "`touch '\\${path.resolve(self.path.target.asset[buildConfiguration.type], \\path.basename(filePath, \\`.\\${buildConfiguration.extension}\\`))}.compiled.\\${buildConfiguration.outputExtension}'`"
          },
          "fileNamePattern": "^.+\\.compiled(?:\\.[^.]+(?:\\.map)?)?$"
        },
        "javaScript": {
          "extension": "js"
        },
        "cascadingStyleSheet": {
          "extension": "css",
          "outputExtension": "css"
        },
        "additional": {
          "outputExtension": "",
          "fileNamePattern": "^.+\\.compiled(?:\\.map)?$"
        }
      },
      "buildDefinition": {
        "CONTEXT_TYPE": {
          "__evaluate__": "self.contextType"
        },
        "DEBUG": {
          "__evaluate__": "self.debug"
        },
        "EXTERNAL_EXPORT_FORMAT": {
          "__evaluate__": "`'${self.exportFormat.external}'`"
        },
        "NAME": {
          "__evaluate__": "`'${self.name}'`"
        },
        "OFFLINE": {
          "__evaluate__": "Boolean(self.offline)"
        },
        "SELF_EXPORT_FORMAT": {
          "__evaluate__": "`'${self.exportFormat.self}'`"
        },
        "TARGET_TECHNOLOGY": {
          "__evaluate__": "`'${self.targetTechnology}'`"
        }
      },
      "commandLine": {
        "build": {
          "arguments": [
            "--bail",
            "--config",
            {
              "__evaluate__": "`${webOptimizerPath}/webpackConfigurator.compiled.js`"
            },
            "--progress",
            "--display-chunks",
            "--display-reasons",
            "--display-error-details"
          ],
          "command": "webpack"
        },
        "document": {
          "arguments": [
            "--package",
            "./package.json",
            "--readme",
            "./readme.md",
            "--destination",
            {
              "__evaluate__": "self.path.apiDocumentation"
            },
            {
              "__evaluate__": "`'${self.path.target.asset.javaScript}'*.js`"
            }
          ],
          "command": "jsdoc",
          "indicator": "self.needed.javaScript"
        },
        "lint": [
          {
            "arguments": [
              {
                "__evaluate__": "path.resolve(self.path.source.asset.cascadingStyleSheet, '**/*.css')"
              },
              "--config",
              {
                "__evaluate__": "path.relative(self.path.context, path.resolve(webOptimizerPath, 'stylelintConfigurator.compiled.js'))"
              }
            ],
            "command": "stylelint",
            "indicator": "self.needed.cascadingStyleSheet"
          },
          {
            "arguments": [
              "--config",
              {
                "__evaluate__": "`'${webOptimizerPath}/package.json'`"
              },
              "--ignore-pattern",
              {
                "__evaluate__": "`'${self.path.target.base.substring(currentPath.length + 1) ? path.relative(currentPath, self.path.target.base, '**') : \"*.compiled.js\"}'`"
              },
              "--ignore-pattern",
              {
                "__evaluate__": "`'${self.path.apiDocumentation}'`"
              },
              "'**/*.js'"
            ],
            "command": "eslint",
            "indicator": "self.needed.javaScript"
          }
        ],
        "serve": {
          "arguments": [
            "--config",
            {
              "__evaluate__": "`'${webOptimizerPath}/webpackConfigurator.compiled.js'`"
            },
            {
              "__evaluate__": "self.debug ? '--hot' : ''"
            },
            {
              "__evaluate__": "self.debug ? '--inline' : ''"
            },
            "--host",
            "0.0.0.0",
            "--port",
            {
              "__evaluate__": "self.development.server.port"
            },
            "--colors",
            "--compress",
            "--history-api-fallback"
          ],
          "command": "webpack-dev-server"
        },
        "test": {
          "command": "./testBundle.compiled.js"
        },
        "testInBrowser": {
          "__evaluate__": "self.commandLine.serve"
        },
        "typeCheck": {
          "command": "flow",
          "arguments": [
            "--color",
            "always",
            "--strip-root"
          ]
        }
      },
      "development": {
        "openBrowser": null,
        "server": {
          "contentBase": {
            "__evaluate__": "self.path.source.base"
          },
          "historyApiFallback": true,
          "hot": true,
          "stats": {
            "colors": true
          },
          "host": "localhost",
          "port": 8080,
          "protocol": "http"
        },
        "tool": null
      },
      "hashAlgorithm": "md5",
      "loader": {
        "aliases": {
          "pug": "weboptimizer/pug"
        },
        "extensions": [
          "",
          ".webpack-loader.js",
          ".web-loader.js",
          ".loader.js",
          "-loader.compiled.js",
          "-loader.js",
          "Loader.compiled.js",
          "Loader.js",
          ".js.compiled",
          ".js"
        ],
        "directories": [
          "web_loaders",
          "web_modules",
          "node_loaders",
          "node_modules"
        ]
      },
      "stylelint": {
        "extends": "stylelint-config-standard",
        "rules": {
          "comment-empty-line-before": "never",
          "indentation": 4
        }
      },
      "document": {
        "inPlace": {
          "externalLibrary": {
            "normal": false
          }
        },
        "module": {
          "optimizer": {
            "uglifyJS": null
          },
          "preprocessor": {
            "babel": {
              "presets": {
                "__remove__": [
                  "babili"
                ]
              }
            }
          }
        }
      },
      "test": {
        "exportFormat": {
          "external": "commonjs2",
          "self": "commonjs2"
        },
        "files": {
          "compose": {
            "javaScript": {
              "__evaluate__": "`${path.resolve(self.path.target.asset.javaScript, 'testBundle.compiled.js')}?${self.hashAlgorithm}=[hash]`"
            }
          },
          "defaultHTML": {
            "filename": "test.html",
            "inject": "head",
            "template": {
              "__evaluate__": "`html?${tools.convertCircularObjectToJSON(self.module.html)}!pug?${tools.convertCircularObjectToJSON(self.module.preprocessor.pug)}!${helper.isFileSync(path.resolve(self.path.source.base, 'test.pug')) ? path.resolve(self.path.source.base, 'test.pug') : path.resolve(webOptimizerPath, 'index.pug')}`"
            }
          },
          "html": []
        },
        "injection": {
          "internal": {
            "index": "test/"
          }
        },
        "targetTechnology": "node",
        "assetPattern": {
          "javaScript": {
            "pattern": "#!/usr/bin/env node\n// -*- coding: utf-8 -*-\n'use strict';\n{1}"
          }
        }
      },
      "testInBrowser": {
        "files": {
          "defaultHTML": {
            "filename": "test.html",
            "inject": "head",
            "template": {
              "__evaluate__": "`html?${tools.convertCircularObjectToJSON(self.module.html)}!pug?${tools.convertCircularObjectToJSON(self.module.preprocessor.pug)}!${helper.isFileSync(path.resolve(self.path.source.base, 'test.pug')) ? path.resolve(self.path.source.base, 'test.pug') : path.resolve(webOptimizerPath, 'index.pug')}`"
            }
          }
        },
        "inPlace": {
          "externalLibrary": {
            "normal": true
          }
        },
        "injection": {
          "internal": {
            "index": "test/"
          }
        },
        "module": {
          "optimizer": {
            "uglifyJS": null
          }
        },
        "offline": null
      }
    },
    "debug": {
      "debug": true,
      "injection": {
        "internal": {
          "developmentHelper": {
            "__evaluate__": "2 < self.givenCommandLineArguments.length && (['buildDLL', 'watchDLL'].includes(self.givenCommandLineArguments[2]) || self.dllManifestFilePaths.length && ['serve', 'testInBrowser'].includes(self.givenCommandLineArguments[2])) ? [`webpack-dev-server/client?${self.development.server.protocol}://0.0.0.0:${self.development.server.port}`] : []"
          },
          "vendor": {
            "__evaluate__": "2 < self.givenCommandLineArguments.length && ['buildDLL', 'testInBrowser', 'watchDLL'].includes(self.givenCommandLineArguments[2]) ? ['qunitjs', 'weboptimizer/browserAPI'] : []"
          }
        }
      },
      "files": {
        "compose": {
          "javaScript": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.javaScript, '[name].js')}?${self.hashAlgorithm}=[hash]`"
          }
        },
        "defaultHTML": {
          "debug": true
        }
      },
      "inPlace": {
        "cascadingStyleSheet": false,
        "javaScript": false,
        "otherMaximumFileSizeLimitInByte": 1
      },
      "module": {
        "preprocessor": {
          "babel": {
            "presets": {
              "__remove__": [
                "babili"
              ]
            }
          },
          "pug": {
            "compiler": {
              "pretty": true
            }
          }
        },
        "cascadingStyleSheet": "?sourceMap",
        "optimizer": {
          "uglifyJS": null,
          "htmlMinifier": {
            "collapseWhitespace": false,
            "removeComments": false,
            "removeCommentsFromCDATA": false,
            "removeCDATASectionsFromCDATA": false,
            "collapseInlineTagWhitespace": false,
            "collapseBooleanAttributes": false,
            "removeScriptTypeAttributes": false,
            "removeStyleLinkTypeAttributes": false
          }
        }
      },
      "offline": null,
      "development": {
        "openBrowser": {
          "url": {
            "__evaluate__": "`${self.development.server.protocol}://${self.development.server.host}:${self.development.server.port}/${self.files.defaultHTML.filename}`"
          }
        },
        "tool": "#eval-cheap-module-source-map"
      }
    },
    "library": {
      "exportFormat": {
        "self": {
          "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? 'var' : 'umd'"
        }
      },
      "files": {
        "compose": {
          "cascadingStyleSheet": {
            "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && ['testInBrowser', 'serve'].includes(self.givenCommandLineArguments[2]) ? null : `${path.resolve(self.path.target.asset.cascadingStyleSheet, 'index.compiled.css')}?${self.hashAlgorithm}=[contenthash]`"
          },
          "javaScript": {
            "__evaluate__": "`${path.resolve(self.path.target.asset.javaScript, '[name].compiled.js')}?${self.hashAlgorithm}=[hash]`"
          }
        },
        "defaultHTML": {
          "filename": "playground.html",
          "inject": "head",
          "template": {
            "__evaluate__": "`html?${tools.convertCircularObjectToJSON(self.module.html)}!pug?${tools.convertCircularObjectToJSON(self.module.preprocessor.pug)}!${helper.isFileSync(path.resolve(self.path.source.base, 'playground.pug')) ? path.resolve(self.path.source.base, 'playground.pug') : path.resolve(webOptimizerPath, 'index.pug')}`"
          }
        },
        "html": {
          "__evaluate__": "2 < self.givenCommandLineArguments.length && ['testInBrowser', 'serve'].includes(self.givenCommandLineArguments[2]) ? [{}] : []"
        }
      },
      "injection": {
        "autoExclude": [
          "test.js",
          "test"
        ]
      },
      "inPlace": {
        "otherMaximumFileSizeLimitInByte": 1,
        "externalLibrary": {
          "normal": {
            "__evaluate__": "2 < self.givenCommandLineArguments.length && ['buildDLL', 'serve', 'watchDLL'].includes(self.givenCommandLineArguments[2])"
          }
        }
      },
      "libraryName": {
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? [tools.stringConvertToValidVariableName(self.name), '[name]']: null"
      },
      "path": {
        "source": {
          "asset": {
            "cascadingStyleSheet": "./",
            "javaScript": "./",
            "font": "./",
            "image": "./",
            "template": "./",
            "data": "./"
          },
          "base": "./"
        },
        "target": {
          "asset": {
            "cascadingStyleSheet": "./",
            "javaScript": "./",
            "font": "./",
            "image": "./",
            "template": "./",
            "data": "./"
          },
          "base": "./"
        }
      },
      "offline": null,
      "document": {
        "commandLine": {
          "document": {
            "arguments": [
              "--package",
              "./package.json",
              "--readme",
              "./readme.md",
              "--destination",
              {
                "__evaluate__": "self.path.apiDocumentation"
              },
              {
                "__evaluate__": "`'${self.path.target.asset.javaScript}'*.compiled.js`"
              }
            ]
          }
        },
        "exportFormat": {
          "self": "var"
        },
        "targetTechnology": "node"
      },
      "test": {
        "injection": {
          "internal": {
            "index": "test"
          }
        }
      },
      "testInBrowser": {
        "injection": {
          "internal": {
            "index": "test"
          }
        }
      }
    }
  },
  "dependencies": {
    "add-asset-html-webpack-plugin": "latest",
    "babel-cli": "latest",
    "babel-eslint": "latest",
    "babel-loader": "latest",
    "babel-plugin-transform-flow-strip-types": "latest",
    "babel-plugin-transform-runtime": "latest",
    "babel-polyfill": "latest",
    "babel-preset-latest": "latest",
    "babel-preset-stage-0": "latest",
    "babel-runtime": "latest",
    "babili": "latest",
    "clientnode": "latest",
    "css-loader": "latest",
    "eslint": "latest",
    "eslint-config-google": "latest",
    "eslint-plugin-flowtype": "latest",
    "eslint-plugin-jsdoc": "latest",
    "exports-loader": "latest",
    "extract-loader": "latest",
    "extract-text-webpack-plugin": "latest",
    "favicons-webpack-plugin": "latest",
    "file-loader": "latest",
    "flow-bin": "latest",
    "html-loader": "latest",
    "html-webpack-plugin": "latest",
    "imagemin-webpack-plugin": "latest",
    "imports-loader": "latest",
    "jsdoc": "latest",
    "jsdom": "latest",
    "loader-utils": "latest",
    "offline-plugin": "latest",
    "open-browser-webpack-plugin": "latest",
    "postcss-cssnext": "latest",
    "postcss-fontpath": "latest",
    "postcss-import": "latest",
    "postcss-loader": "latest",
    "postcss-sprites": "latest",
    "postcss-url": "latest",
    "pug": "latest",
    "pug-cli": "latest",
    "rimraf": "latest",
    "script-loader": "latest",
    "style-loader": "latest",
    "stylelint": "latest",
    "stylelint-config-standard": "latest",
    "url-loader": "latest",
    "webpack": "latest",
    "webpack-dev-server": "latest",
    "webpack-load-plugins": "latest",
    "webpack-sources": "latest"
  },
  "description": "A generic web optimizer, (module) bundler and development environment.",
  "devDependencies": {
    "documentation-website": "latest",
    "qunit-cli": "latest",
    "source-map-support": "latest"
  },
  "directories": {},
  "dist": {
    "shasum": "1a2a9a6e9473cdcb7c4d3cde08c83ef4faa2db96",
    "tarball": "https://registry.npmjs.org/weboptimizer/-/weboptimizer-1.0.70.tgz"
  },
  "documentationWebsite": {
    "name": "webOptimizer",
    "bundle": false,
    "trackingCode": "UA-40192634-11"
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "node": true
    },
    "extends": "google",
    "parserOptions": {
      "ecmaFeatures": {},
      "ecmaVersion": 7,
      "impliedStrict": true,
      "sourceType": "module"
    },
    "parser": "babel-eslint",
    "plugins": [
      "jsdoc",
      "flowtype"
    ],
    "rules": {
      "arrow-parens": [
        "error",
        "always"
      ],
      "block-scoped-var": 0,
      "curly": [
        "error",
        "multi"
      ],
      "indent": [
        "error",
        4
      ],
      "max-nested-callbacks": [
        "error",
        10
      ],
      "no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "new-cap": 0,
      "no-constant-condition": 0,
      "no-new-func": 0,
      "no-new-wrappers": 0,
      "quote-props": [
        "error",
        "as-needed",
        {
          "numbers": true
        }
      ],
      "require-jsdoc": [
        "error",
        {
          "require": {
            "FunctionDeclaration": true,
            "MethodDefinition": true,
            "ClassDeclaration": true
          }
        }
      ],
      "semi": [
        "error",
        "never"
      ],
      "spaced-comment": [
        "error",
        "always",
        {
          "line": {
            "exceptions": [
              "/usr/bin/env node"
            ]
          }
        }
      ],
      "space-infix-ops": 0,
      "valid-jsdoc": [
        0,
        {
          "prefer": {
            "return": "returns"
          },
          "requireParamDescription": false,
          "requireReturnDescription": true,
          "requireReturnType": false
        }
      ],
      "jsdoc/check-param-names": "error",
      "jsdoc/check-tag-names": "error",
      "jsdoc/newline-after-description": [
        "error",
        "newer"
      ],
      "jsdoc/require-description-complete-sentence": "error",
      "jsdoc/require-hyphen-before-param-description": "error",
      "jsdoc/require-param": "error",
      "jsdoc/require-param-description": "error",
      "jsdoc/require-param-type": 0,
      "jsdoc/require-returns-description": "error",
      "jsdoc/require-returns-type": 0,
      "flowtype/require-parameter-type": "error",
      "flowtype/require-return-type": [
        "error",
        "always",
        {
          "annotateUndefined": "always"
        }
      ],
      "flowtype/space-before-type-colon": [
        "error",
        "never"
      ],
      "flowtype/space-after-type-colon": [
        "error",
        "never"
      ],
      "flowtype/type-id-match": [
        "error",
        "^([$_]*[A-Z]+[a-z0-9]*)+$"
      ]
    },
    "settings": {
      "flowtype": {
        "onlyFilesWithFlowAnnotation": false
      }
    }
  },
  "files": [
    "browserAPI.js",
    "browserAPI.compiled.js",
    "configurator.js",
    "configurator.compiled.js",
    "helper.js",
    "helper.compiled.js",
    "pugLoader.js",
    "pugLoader.compiled.js",
    "taskRunner.js",
    "index.pug",
    "stylelintConfigurator.js",
    "stylelintConfigurator.compiled.js",
    "type.js",
    "webpackConfigurator.js",
    "webpackConfigurator.compiled.js"
  ],
  "gitHead": "3704285fc2508435a0116639312c30f7009cd4fe",
  "homepage": "http://torben.website/webOptimizer",
  "keywords": [
    "webpack",
    "optimizer",
    "configuration",
    "generic",
    "lint",
    "bundle",
    "test",
    "document",
    "mock"
  ],
  "license": "CC-BY-3.0",
  "main": "taskRunner.compiled.js",
  "maintainers": [
    {
      "name": "thaibault",
      "email": "info@torben.website"
    }
  ],
  "name": "weboptimizer",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thaibault/webOptimizer.git"
  },
  "scripts": {
    "build": "command='babel --plugins transform-flow-strip-types --presets latest,stage-0 --source-maps inline --out-file' && $command browserAPI.compiled.js browserAPI.js && $command configurator.compiled.js configurator.js && $command helper.compiled.js helper.js && $command pugLoader.compiled.js pugLoader.js && $command stylelintConfigurator.compiled.js stylelintConfigurator.js && $command taskRunner.compiled.js taskRunner.js && $command webpackConfigurator.compiled.js webpackConfigurator.js",
    "clear": "rm *.compiled.* &>/dev/null;rm --recursive *.compiled &>/dev/null;rm test/*.compiled.* &>/dev/null;rm --recursive apiDocumentation &>/dev/null; rm *.html &>/dev/null || true",
    "document": "npm run build && jsdoc --package ./package.json --readme ./readme.md --destination apiDocumentation *.compiled.js",
    "lint": "flow --color always --strip-root && eslint --ignore-pattern '*.compiled.*' '*.js' 'test/*.js' || true",
    "prepublish": "npm run build",
    "test": "npm run clear && command='babel --plugins transform-flow-strip-types --presets latest,stage-0 --source-maps inline --out-file' && $command browserAPI.compiled.js browserAPI.js && $command test/browserAPI.compiled.js test/browserAPI.js && $command configurator.compiled.js configurator.js && $command helper.compiled.js helper.js && chmod +x test/* && test/browserAPI.compiled.js && $command test/configurator.compiled.js test/configurator.js && chmod +x test/* && test/configurator.compiled.js && $command test/helper.compiled.js test/helper.js && chmod +x test/* && test/helper.compiled.js && $command pugLoader.compiled.js pugLoader.js && $command test/pugLoader.compiled.js test/pugLoader.js && chmod +x test/* && test/pugLoader.compiled.js && $command stylelintConfigurator.compiled.js stylelintConfigurator.js && $command test/stylelintConfigurator.compiled.js test/stylelintConfigurator.js && chmod +x test/* && test/stylelintConfigurator.compiled.js && $command taskRunner.compiled.js taskRunner.js && $command test/taskRunner.compiled.js test/taskRunner.js && chmod +x test/* && test/taskRunner.compiled.js && $command webpackConfigurator.compiled.js webpackConfigurator.js && $command test/webpackConfigurator.compiled.js test/webpackConfigurator.js && chmod +x test/* && test/webpackConfigurator.compiled.js || true",
    "update": "npm version patch && npm publish",
    "updateDocumentation": "documentationWebsite --log-level info"
  },
  "version": "1.0.70"
}
