{
  "_args": [
    [
      {
        "raw": "clientNode@latest",
        "scope": null,
        "escapedName": "clientNode",
        "name": "clientNode",
        "rawSpec": "latest",
        "spec": "latest",
        "type": "tag"
      },
      "/home/torben/cloud/data/repository/public/angularUser/node_modules/angular-generic"
    ]
  ],
  "_from": "clientNode@latest",
  "_id": "clientNode@1.0.39",
  "_inCache": true,
  "_installable": true,
  "_location": "/clientNode",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/clientNode-1.0.39.tgz_1473168580285_0.8794217167887837"
  },
  "_npmUser": {
    "name": "thaibault",
    "email": "info@torben.website"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "clientNode@latest",
    "scope": null,
    "escapedName": "clientNode",
    "name": "clientNode",
    "rawSpec": "latest",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/angular-generic"
  ],
  "_resolved": "https://registry.npmjs.org/clientNode/-/clientNode-1.0.39.tgz",
  "_shasum": "d5722c04419948108598b2d28417ffb05620b4fc",
  "_shrinkwrap": null,
  "_spec": "clientNode@latest",
  "_where": "/home/torben/cloud/data/repository/public/angularUser/node_modules/angular-generic",
  "bugs": {
    "url": "https://github.com/thaibault/clientNode/issues"
  },
  "dependencies": {},
  "deprecated": "package was renamed: use \"clientnode\"",
  "description": "upgrade to object orientated rock solid plugins",
  "devDependencies": {
    "jquery": "latest",
    "jsdom": "latest",
    "qunit-cli": "latest",
    "qunitjs": "latest",
    "source-map-support": "latest",
    "webOptimizer": "latest"
  },
  "directories": {},
  "dist": {
    "shasum": "d5722c04419948108598b2d28417ffb05620b4fc",
    "tarball": "https://registry.npmjs.org/clientNode/-/clientNode-1.0.39.tgz"
  },
  "files": [
    "index.js",
    "test.js",
    "test.compiled.js"
  ],
  "gitHead": "5512f8bd85357e45b08516ddca7e43048836afb3",
  "homepage": "http://torben.website/clientNode",
  "keywords": [
    "client",
    "tools",
    "node",
    "polymorph",
    "jquery"
  ],
  "license": "CC-BY-3.0",
  "main": "index.compiled.js",
  "maintainers": [
    {
      "name": "thaibault",
      "email": "info@torben.website"
    }
  ],
  "name": "clientNode",
  "optionalDependencies": {},
  "peerDependencies": {
    "jquery": "*"
  },
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thaibault/clientNode.git"
  },
  "scripts": {
    "build": "webOptimizer build && babel --plugins transform-flow-strip-types --presets latest,stage-0 --source-maps inline --out-file test.compiled.js test.js",
    "buildDLL": "webOptimizer buildDLL",
    "clear": "webOptimizer clear",
    "document": "webOptimizer document",
    "lint": "webOptimizer typeCheck && webOptimizer lint",
    "prepublish": "if ! npm run build; then echo You should rerun install procedure to resolve dependency cycle. && babel --plugins transform-flow-strip-types --presets latest,stage-0 --source-maps inline --out-file index.compiled.js index.js; fi",
    "serve": "webOptimizer serve",
    "start": "npm run serve",
    "test": "webOptimizer test",
    "testInBrowser": "webOptimizer testInBrowser",
    "update": "npm version patch && npm publish",
    "watch": "webOptimizer build --watch",
    "watchDLL": "webOptimizer buildDLL --watch"
  },
  "version": "1.0.39",
  "webOptimizer": {
    "development": {
      "tool": null
    },
    "injection": {
      "internal": {
        "vendor": {
          "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && ['buildDLL', 'serve', 'testInBrowser', 'watchDLL'].includes(self.givenCommandLineArguments[2]) ? self.givenCommandLineArguments[2] === 'serve' ? [] : ['script!qunitjs', 'webOptimizer/browserAPI'] : []"
        }
      }
    },
    "module": {
      "preprocessor": {
        "babel": {
          "presets": [
            "latest",
            "stage-0"
          ]
        }
      },
      "provide": {
        "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? {$: 'jquery'} : {}"
      },
      "skipParseRegularExpression": {
        "__evaluate__": "/\\/(?:(?:jquery)|(?:module)|([^/]+\\.min))\\.js(?:\\?.+|$)/"
      }
    }
  }
}
