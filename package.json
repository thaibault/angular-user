{
  "name": "angular-user",
  "version": "1.0.16",
  "license": "CC-BY-3.0",
  "description": "generic user service with authentication, authorisation, user data handler and session or local storage management",
  "homepage": "http://torben.website/angularUser",
  "documentationWebsite": {
    "name": "angularUser",
    "trackingCode": "UA-40192634-17"
  },
  "keywords": [
    "angular",
    "user",
    "authentication",
    "authorisation"
  ],
  "files": [
    "index.js"
  ],
  "main": "index.compiled.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/angularUser"
  },
  "scripts": {
    "build": "webOptimizer build",
    "buildDLL": "webOptimizer buildDLL",
    "clear": "webOptimizer clear",
    "document": "webOptimizer document",
    "export": "webOptimizer build '{development:{tool:false},module:{preprocessor:{javaScript:{configuration:{plugins:{__remove__:\"transform-runtime\"}}}}}}'",
    "lint": "webOptimizer typeCheck; webOptimizer lint",
    "prepublish": "npm run build",
    "serve": "webOptimizer serve",
    "start": "npm run serve",
    "test": "webOptimizer test",
    "testInBrowser": "webOptimizer testInBrowser",
    "update": "npm version patch && npm publish",
    "updateDocumentation": "documentationWebsite --log-level info",
    "watch": "webOptimizer build --watch",
    "watchDLL": "webOptimizer buildDLL --watch"
  },
  "dependencies": {
    "angular-generic": "latest",
    "pouchdb-authentication": "latest"
  },
  "devDependencies": {
    "@angular/compiler-cli": "latest",
    "@angular/platform-server": "latest",
    "babel-plugin-angular2-annotations": "latest",
    "babel-plugin-transform-decorators-legacy": "latest",
    "documentation-website": "latest",
    "pouchdb-adapter-memory": "latest",
    "source-map-support": "latest",
    "weboptimizer": "latest"
  },
  "webOptimizer": {
    "injection": {
      "external": {
        "implicit": {
          "pattern": {
            "exclude": {
              "__append__": [
                {
                  "__evaluate__": "/^angular-generic\\/testRunner(?:\\.compiled)?(?:\\.js)?$/"
                },
                {
                  "__evaluate__": "/^clientnode\\/test(?:\\.compiled)?(?:\\.js)?$/"
                }
              ]
            }
          }
        }
      },
      "internal": {
        "index": {
          "__evaluate__": "(self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] !== 'build' ? ['reflect-metadata', 'zone.js'] : []).concat(self.givenCommandLineArguments.length && ['buildDLL', 'serve', 'testInBrowser', 'watchDLL'].includes(self.givenCommandLineArguments[2]) ? `webpack-dev-server/client?http${self.development.server.cert ? 's' : ''}://0.0.0.0:${self.development.server.port}` : []).concat(self.givenCommandLineArguments.length && ['test', 'testInBrowser'].includes(self.givenCommandLineArguments[2]) ? './test' : './index')"
        },
        "vendor": {
          "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && ['buildDLL', 'serve', 'testInBrowser', 'watchDLL'].includes(self.givenCommandLineArguments[2]) ? ['babel-polyfill', 'hammerjs', 'reflect-metadata', 'zone.js', 'rxjs', '@angular/common', '@angular/core', '@angular/http', '@angular/material', '@angular/platform-browser', '@angular/platform-browser-dynamic', '@angular/router'].concat(self.givenCommandLineArguments[2] === 'serve' ? [] : ['angular-generic/testRunner', 'weboptimizer/browserAPI']) : []"
        }
      }
    },
    "module": {
      "additional": [
        {
          "exclude": "rejectFilePathInDependencies(filePath)",
          "loader": "`angular2-template-loader`",
          "test": "'\\\\.component\\\\.js(?:\\\\?.*)?$'"
        },
        {
          "exclude": "rejectFilePathInDependencies(filePath)",
          "loader": "`raw!${loader.cascadingStyleSheet}!${loader.preprocessor.cascadingStyleSheet}`",
          "test": "'\\\\.component\\\\.css(?:\\\\?.*)?$'"
        },
        {
          "exclude": "rejectFilePathInDependencies(filePath)",
          "loader": "`${loader.html}!${loader.preprocessor.html}`",
          "test": "'\\\\.component\\\\.pug(?:\\\\?.*)?$'"
        }
      ],
      "aliases": {
        "angular-generic/mockup$": "angular-generic/mockup.compiled",
        "angular-generic/testRunner$": "angular-generic/testRunner.compiled",
        "clientnode/test$": "clientnode/test.compiled"
      },
      "cascadingStyleSheet": {
        "exclude": "filePath.endsWith('.component.css')"
      },
      "preprocessor": {
        "html": {
          "exclude": "filePath.endsWith('.component.pug')"
        },
        "javaScript": {
          "configuration": {
            "plugins": {
              "__prepend__": [
                "angular2-annotations",
                "transform-decorators-legacy"
              ],
              "__remove__": "transform-runtime"
            }
          }
        }
      },
      "replacements": {
        "context": [
          [
            "/angular(\\\\|\\/)core(\\\\|\\/)(esm(\\\\|\\/)src|src)(\\\\|\\/)linker/",
            "__dirname"
          ]
        ],
        "normal": {
          "^jquery$": "jquery/dist/jquery.min.js",
          "^pouchdb(?:/.+)?$": "pouchdb/dist/pouchdb.min.js",
          "^pouchdb-find(?:/.+)?$": "pouchdb-find/dist/pouchdb.find.min.js",
          "^DOESNT WORK: rxjs(?:/.+)?$": "rxjs/bundles/Rx.min.js",
          "^DOESNT WORK IN NODE: zone\\.js(?:/.+)?$": "zone.js/dist/zone.min.js"
        }
      },
      "skipParseRegularExpressions": {
        "__evaluate__": "/(?:^|\\/)(?:(?:babel-polyfill\\/dist\\/polyfill)|(?:jquery\\/dist\\/jquery)|(?:pouchdb\\/dist\\/pouchdb)|(?:pouchdb\\.find\\/dist\\/pouchdb\\.find)|(?:rxjs\\/bundles\\/Rx)|(?:reflect-metadata\\/Reflect)|(?:zone\\.js\\/dist\\/zone)|([^/]+\\.min))\\.js(?:\\?.+|$)/"
      }
    }
  }
}
