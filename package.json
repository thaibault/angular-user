{
  "name": "angular-user",
  "version": "1.0.422",
  "license": "CC-BY-3.0",
  "description": "generic user service with authentication, authorisation, user data handler and session or local storage management",
  "homepage": "https://torben.website/angularUser",
  "documentationWebsite": {
    "name": "angularUser",
    "trackingCode": "UA-40192634-17"
  },
  "keywords": [
    "angular",
    "user",
    "authentication",
    "authorisation"
  ],
  "files": [
    "aheadOfTime.compiled",
    "index.js"
  ],
  "main": "index.compiled.js",
  "main:aheadOfTimeCompiled": "aheadOfTime.compiled/index.js",
  "types": "aheadOfTime.compiled/index.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/angularUser"
  },
  "scripts": {
    "build": "yarn build:aot && yarn build:client",
    "build:aot": "mv node_modules/angular-generic/node_modules node_modules/angular-generic/node_modules.compiled &>/dev/null; ngc --project node_modules/angular-generic/aheadOfTimeLibraryCompilation.compiled.json; mv node_modules/angular-generic/node_modules.compiled node_modules/angular-generic/node_modules &>/dev/null || true",
    "build:client": "webOptimizer build",
    "build:export": "yarn build:aot && webOptimizer build '{__reference: \"target:export\"}'",
    "build:typescript": "tsc --project node_modules/angular-generic/aheadOfTimeLibraryCompilation.compiled.json",
    "clear": "webOptimizer clear",
    "document": "webOptimizer document",
    "lint": "webOptimizer check:type; webOptimizer lint",
    "prepare": "yarn build",
    "report:coverage": "nyc report --reporter=text-lcov | coveralls",
    "serve": "webOptimizer serve",
    "start": "yarn serve",
    "test": "nyc yarn test:plain",
    "test:browser": "webOptimizer test:browser",
    "test:plain": "webOptimizer test",
    "update": "yarn version --patch && yarn publish",
    "update:documentation": "documentationWebsite --log-level info",
    "watch": "webOptimizer build --watch"
  },
  "dependencies": {
    "pouchdb-authentication": "*"
  },
  "peerDependencies": {
    "@angular/animations": "*",
    "@angular/common": "*",
    "@angular/compiler": "*",
    "@angular/core": "*",
    "@angular/elements": "*",
    "@angular/forms": "*",
    "@angular/http": "*",
    "@angular/material": "*",
    "@angular/platform-browser": "*",
    "@angular/platform-browser-dynamic": "*",
    "@angular/platform-server": "*",
    "@angular/router": "*",
    "@babel/runtime": "*",
    "angular-generic": "*",
    "reflect-metadata": "*",
    "rxjs": "*",
    "zone.js": "*"
  },
  "devDependencies": {
    "@angular/animations": "*",
    "@angular/cdk": "*",
    "@angular/common": "*",
    "@angular/compiler": "*",
    "@angular/compiler-cli": "*",
    "@angular/core": "*",
    "@angular/elements": "*",
    "@angular/forms": "*",
    "@angular/http": "*",
    "@angular/material": "*",
    "@angular/platform-browser": "*",
    "@angular/platform-browser-dynamic": "*",
    "@angular/platform-server": "*",
    "@angular/router": "*",
    "@babel/plugin-proposal-decorators": "*",
    "@babel/polyfill": "*",
    "@types/node": "*",
    "angular-generic": "*",
    "babel-eslint": "*",
    "babel-plugin-angular2-annotations": "*",
    "clientnode": "*",
    "coveralls": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-flowtype": "*",
    "eslint-plugin-jsdoc": "*",
    "flow-bin": "*",
    "jquery": "*",
    "jsdoc": "*",
    "nyc": "*",
    "pouchdb-adapter-memory": "*",
    "qunit": "*",
    "reflect-metadata": "*",
    "rxjs": "*",
    "typescript": "3.2.x",
    "weboptimizer": "*",
    "webpack": "*",
    "webpack-cli": "*",
    "webpack-dev-server": "*",
    "zone.js": "*"
  },
  "sideEffects": false,
  "webOptimizer": {
    "injection": {
      "entry": {
        "index": {
          "__evaluate__": "(self.givenCommandLineArguments.length && ['build', 'export'].includes(self.givenCommandLineArguments[2]) ? [] : ['@babel/polyfill', 'reflect-metadata', 'zone.js']).concat(self.givenCommandLineArguments.length && ['serve', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? `webpack-dev-server/client?http${self.development.server.cert ? 's' : ''}://0.0.0.0:${self.development.server.port}` : []).concat(self.givenCommandLineArguments.length && ['test', 'test:browser'].includes(self.givenCommandLineArguments[2]) ? './test' : './index')"
        }
      },
      "external": {
        "aliases": {
          "angular-generic/animation": {
            "default": "angular-generic/animation.compiled",
            "root": "angularGenericAnimation"
          },
          "angular-generic/basePipe": {
            "default": "angular-generic/basePipe.compiled",
            "root": "angularGenericBasePipe"
          },
          "angular-generic/mockup": {
            "default": "angular-generic/mockup.compiled",
            "root": "angularGenericMockup"
          },
          "angular-generic/service": {
            "default": "angular-generic/service.compiled",
            "root": "angularGenericService"
          }
        },
        "implicit": {
          "pattern": {
            "exclude": {
              "__append__": {
                "__evaluate__": "/^angular-generic\\/testRunner(?:\\.compiled)?(?:\\.js)?$/"
              }
            }
          }
        }
      }
    },
    "module": {
      "aliases": {
        "#": "Using pre-compiled artefacts.",
        "@babel/polyfill$": "@babel/polyfill/dist/polyfill.min.js",
        "#0": "We need to process this file dynamically when testing different environments.",
        "clientnode/test$": "clientnode/test"
      },
      "optimizer": {
        "babelMinify": {
          "bundle": {
            "__evaluate__": "self.debug ? null : {}"
          },
          "#": "This loader expects javascript (not typescript) here. TODO does this make sense?",
          "module": null
        }
      },
      "preprocessor": {
        "javaScript": {
          "exclude": "!(filePath.includes('angular-generic') || filePath.endsWith('/clientnode/test.js')) && isFilePathInDependencies(filePath)",
          "options": {
            "plugins": {
              "__prepend__": [
                "angular2-annotations",
                [
                  "@babel/plugin-proposal-decorators",
                  {
                    "legacy": true
                  }
                ],
                [
                  "@babel/plugin-proposal-class-properties",
                  {
                    "loose": true
                  }
                ]
              ],
              "__remove__": [
                "@babel/plugin-proposal-class-properties",
                "@babel/plugin-transform-runtime"
              ]
            }
          }
        }
      },
      "replacements": {
        "context": [
          [
            "/@angular\\/+core\\/+f?esm(?:201)?5/",
            {
              "__evaluate__": "`'${self.path.source.base}'`"
            }
          ]
        ]
      },
      "skipParseRegularExpressions": {
        "__evaluate__": "/(?:^|\\/)(?:(?:@babel\\/polyfill\\/dist\\/polyfill)|(?:hammerjs\\/hammer)|(?:jquery\\/dist\\/jquery)|(?:pouchdb\\/dist\\/pouchdb))(?:\\.min)?\\.js(?:\\?.+|$)/"
      }
    },
    "target:export": {
      "module": {
        "preprocessor": {
          "javaScript": {
            "options": {
              "plugins": {
                "__remove__": "@babel/plugin-transform-runtime"
              }
            }
          }
        }
      }
    }
  }
}
